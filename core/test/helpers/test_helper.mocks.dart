// Mocks generated by Mockito 5.4.6 from annotations
// in core/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:convert' as _i34;
import 'dart:typed_data' as _i35;

import 'package:core/data/datasources/db/database_helper.dart' as _i23;
import 'package:core/data/datasources/movie_local_data_source.dart' as _i18;
import 'package:core/data/datasources/movie_remote_data_source.dart' as _i14;
import 'package:core/data/datasources/tv_local_data_source.dart' as _i21;
import 'package:core/data/datasources/tv_remote_data_source.dart' as _i16;
import 'package:core/data/models/movie_detail_model.dart' as _i3;
import 'package:core/data/models/movie_model.dart' as _i15;
import 'package:core/data/models/movie_table.dart' as _i19;
import 'package:core/data/models/tv_detail_model.dart' as _i4;
import 'package:core/data/models/tv_model.dart' as _i17;
import 'package:core/data/models/tv_table.dart' as _i22;
import 'package:core/domain/entities/movie.dart' as _i10;
import 'package:core/domain/entities/movie_detail.dart' as _i11;
import 'package:core/domain/entities/tv.dart' as _i12;
import 'package:core/domain/entities/tv_detail.dart' as _i13;
import 'package:core/domain/repositories/movie_repository.dart' as _i5;
import 'package:core/domain/repositories/tv_repository.dart' as _i6;
import 'package:core/domain/usecases/get_airing_today_tvs.dart' as _i28;
import 'package:core/domain/usecases/get_now_playing_movies.dart' as _i25;
import 'package:core/domain/usecases/get_on_the_air_tvs.dart' as _i29;
import 'package:core/domain/usecases/get_popular_movies.dart' as _i26;
import 'package:core/domain/usecases/get_popular_tvs.dart' as _i30;
import 'package:core/domain/usecases/get_top_rated_movies.dart' as _i27;
import 'package:core/domain/usecases/get_top_rated_tvs.dart' as _i31;
import 'package:core/domain/usecases/get_watchlist_movies.dart' as _i32;
import 'package:core/domain/usecases/get_watchlist_tvs.dart' as _i33;
import 'package:core/utils/failure.dart' as _i9;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i20;
import 'package:sqflite_sqlcipher/sqflite.dart' as _i24;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMovieDetailResponse_1 extends _i1.SmartFake
    implements _i3.MovieDetailResponse {
  _FakeMovieDetailResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTVDetailResponse_2 extends _i1.SmartFake
    implements _i4.TVDetailResponse {
  _FakeTVDetailResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMovieRepository_3 extends _i1.SmartFake
    implements _i5.MovieRepository {
  _FakeMovieRepository_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTVRepository_4 extends _i1.SmartFake implements _i6.TVRepository {
  _FakeTVRepository_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_5 extends _i1.SmartFake implements _i7.Response {
  _FakeResponse_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamedResponse_6 extends _i1.SmartFake
    implements _i7.StreamedResponse {
  _FakeStreamedResponse_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i5.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getNowPlayingMovies, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#getNowPlayingMovies, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularMovies, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#getPopularMovies, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedMovies, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#getTopRatedMovies, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>> getMovieDetail(
    int? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetail, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>>.value(
                  _FakeEither_0<_i9.Failure, _i11.MovieDetail>(
                    this,
                    Invocation.method(#getMovieDetail, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getMovieRecommendations(
    int? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieRecommendations, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#getMovieRecommendations, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> searchMovies(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovies, [query]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#searchMovies, [query]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> saveWatchlist(
    _i11.MovieDetail? movie,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveWatchlist, [movie]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#saveWatchlist, [movie]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> removeWatchlist(
    _i11.MovieDetail? movie,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [movie]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#removeWatchlist, [movie]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);

  @override
  _i8.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#isAddedToWatchlist, [id]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getWatchlistMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistMovies, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#getWatchlistMovies, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [TVRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVRepository extends _i1.Mock implements _i6.TVRepository {
  MockTVRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>> getAiringTodayTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getAiringTodayTvs, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.TV>>(
                    this,
                    Invocation.method(#getAiringTodayTvs, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>> getOnTheAirTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getOnTheAirTvs, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.TV>>(
                    this,
                    Invocation.method(#getOnTheAirTvs, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>> getPopularTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTvs, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.TV>>(
                    this,
                    Invocation.method(#getPopularTvs, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>> getTopRatedTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedTvs, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.TV>>(
                    this,
                    Invocation.method(#getTopRatedTvs, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, _i13.TVDetail>> getTvDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvDetail, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, _i13.TVDetail>>.value(
                  _FakeEither_0<_i9.Failure, _i13.TVDetail>(
                    this,
                    Invocation.method(#getTvDetail, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, _i13.TVDetail>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>> getTvRecommendations(
    int? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getTvRecommendations, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.TV>>(
                    this,
                    Invocation.method(#getTvRecommendations, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>> searchTvs(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchTvs, [query]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.TV>>(
                    this,
                    Invocation.method(#searchTvs, [query]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> saveWatchlist(
    _i13.TVDetail? tv,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveWatchlist, [tv]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#saveWatchlist, [tv]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> removeWatchlist(
    _i13.TVDetail? tv,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [tv]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#removeWatchlist, [tv]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);

  @override
  _i8.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#isAddedToWatchlist, [id]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>> getWatchlistTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistTvs, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.TV>>(
                    this,
                    Invocation.method(#getWatchlistTvs, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i14.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i15.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getNowPlayingMovies, []),
            returnValue: _i8.Future<List<_i15.MovieModel>>.value(
              <_i15.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i15.MovieModel>>);

  @override
  _i8.Future<List<_i15.MovieModel>> getPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularMovies, []),
            returnValue: _i8.Future<List<_i15.MovieModel>>.value(
              <_i15.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i15.MovieModel>>);

  @override
  _i8.Future<List<_i15.MovieModel>> getTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedMovies, []),
            returnValue: _i8.Future<List<_i15.MovieModel>>.value(
              <_i15.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i15.MovieModel>>);

  @override
  _i8.Future<_i3.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetail, [id]),
            returnValue: _i8.Future<_i3.MovieDetailResponse>.value(
              _FakeMovieDetailResponse_1(
                this,
                Invocation.method(#getMovieDetail, [id]),
              ),
            ),
          )
          as _i8.Future<_i3.MovieDetailResponse>);

  @override
  _i8.Future<List<_i15.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieRecommendations, [id]),
            returnValue: _i8.Future<List<_i15.MovieModel>>.value(
              <_i15.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i15.MovieModel>>);

  @override
  _i8.Future<List<_i15.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovies, [query]),
            returnValue: _i8.Future<List<_i15.MovieModel>>.value(
              <_i15.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i15.MovieModel>>);
}

/// A class which mocks [TVRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVRemoteDataSource extends _i1.Mock
    implements _i16.TVRemoteDataSource {
  MockTVRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i17.TVModel>> getAiringTodayTvShows() =>
      (super.noSuchMethod(
            Invocation.method(#getAiringTodayTvShows, []),
            returnValue: _i8.Future<List<_i17.TVModel>>.value(<_i17.TVModel>[]),
          )
          as _i8.Future<List<_i17.TVModel>>);

  @override
  _i8.Future<List<_i17.TVModel>> getOnTheAirTvShows() =>
      (super.noSuchMethod(
            Invocation.method(#getOnTheAirTvShows, []),
            returnValue: _i8.Future<List<_i17.TVModel>>.value(<_i17.TVModel>[]),
          )
          as _i8.Future<List<_i17.TVModel>>);

  @override
  _i8.Future<List<_i17.TVModel>> getPopularTvShows() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTvShows, []),
            returnValue: _i8.Future<List<_i17.TVModel>>.value(<_i17.TVModel>[]),
          )
          as _i8.Future<List<_i17.TVModel>>);

  @override
  _i8.Future<List<_i17.TVModel>> getTopRatedTvShows() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedTvShows, []),
            returnValue: _i8.Future<List<_i17.TVModel>>.value(<_i17.TVModel>[]),
          )
          as _i8.Future<List<_i17.TVModel>>);

  @override
  _i8.Future<_i4.TVDetailResponse> getTvShowDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvShowDetail, [id]),
            returnValue: _i8.Future<_i4.TVDetailResponse>.value(
              _FakeTVDetailResponse_2(
                this,
                Invocation.method(#getTvShowDetail, [id]),
              ),
            ),
          )
          as _i8.Future<_i4.TVDetailResponse>);

  @override
  _i8.Future<List<_i17.TVModel>> getTvShowRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvShowRecommendations, [id]),
            returnValue: _i8.Future<List<_i17.TVModel>>.value(<_i17.TVModel>[]),
          )
          as _i8.Future<List<_i17.TVModel>>);

  @override
  _i8.Future<List<_i17.TVModel>> searchTvShows(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchTvShows, [query]),
            returnValue: _i8.Future<List<_i17.TVModel>>.value(<_i17.TVModel>[]),
          )
          as _i8.Future<List<_i17.TVModel>>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i18.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<String> insertWatchlist(_i19.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [movie]),
            returnValue: _i8.Future<String>.value(
              _i20.dummyValue<String>(
                this,
                Invocation.method(#insertWatchlist, [movie]),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  _i8.Future<String> removeWatchlist(_i19.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [movie]),
            returnValue: _i8.Future<String>.value(
              _i20.dummyValue<String>(
                this,
                Invocation.method(#removeWatchlist, [movie]),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  _i8.Future<_i19.MovieTable?> getMovieById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieById, [id]),
            returnValue: _i8.Future<_i19.MovieTable?>.value(),
          )
          as _i8.Future<_i19.MovieTable?>);

  @override
  _i8.Future<List<_i19.MovieTable>> getWatchlistMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistMovies, []),
            returnValue: _i8.Future<List<_i19.MovieTable>>.value(
              <_i19.MovieTable>[],
            ),
          )
          as _i8.Future<List<_i19.MovieTable>>);
}

/// A class which mocks [TVLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVLocalDataSource extends _i1.Mock implements _i21.TVLocalDataSource {
  MockTVLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<String> insertWatchlist(_i22.TVTable? tv) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [tv]),
            returnValue: _i8.Future<String>.value(
              _i20.dummyValue<String>(
                this,
                Invocation.method(#insertWatchlist, [tv]),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  _i8.Future<String> removeWatchlist(_i22.TVTable? tv) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [tv]),
            returnValue: _i8.Future<String>.value(
              _i20.dummyValue<String>(
                this,
                Invocation.method(#removeWatchlist, [tv]),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  _i8.Future<_i22.TVTable?> getTvById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvById, [id]),
            returnValue: _i8.Future<_i22.TVTable?>.value(),
          )
          as _i8.Future<_i22.TVTable?>);

  @override
  _i8.Future<List<_i22.TVTable>> getWatchlistTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistTvs, []),
            returnValue: _i8.Future<List<_i22.TVTable>>.value(<_i22.TVTable>[]),
          )
          as _i8.Future<List<_i22.TVTable>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i23.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i24.Database?> get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _i8.Future<_i24.Database?>.value(),
          )
          as _i8.Future<_i24.Database?>);

  @override
  _i8.Future<int> insertMovieWatchlist(_i19.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#insertMovieWatchlist, [movie]),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<int> insertTvWatchlist(_i22.TVTable? tv) =>
      (super.noSuchMethod(
            Invocation.method(#insertTvWatchlist, [tv]),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<int> removeMovieWatchlist(_i19.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#removeMovieWatchlist, [movie]),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<int> removeTvWatchlist(_i22.TVTable? tv) =>
      (super.noSuchMethod(
            Invocation.method(#removeTvWatchlist, [tv]),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieById, [id]),
            returnValue: _i8.Future<Map<String, dynamic>?>.value(),
          )
          as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<Map<String, dynamic>?> getTvById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvById, [id]),
            returnValue: _i8.Future<Map<String, dynamic>?>.value(),
          )
          as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistMovies, []),
            returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i8.Future<List<Map<String, dynamic>>>);

  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistTvs, []),
            returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i8.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [GetNowPlayingMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNowPlayingMovies extends _i1.Mock
    implements _i25.GetNowPlayingMovies {
  MockGetNowPlayingMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetPopularMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularMovies extends _i1.Mock implements _i26.GetPopularMovies {
  MockGetPopularMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetTopRatedMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedMovies extends _i1.Mock implements _i27.GetTopRatedMovies {
  MockGetTopRatedMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetAiringTodayTVs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAiringTodayTVs extends _i1.Mock implements _i28.GetAiringTodayTVs {
  MockGetAiringTodayTVs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTVRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TVRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.TV>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>);
}

/// A class which mocks [GetOnTheAirTVs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetOnTheAirTVs extends _i1.Mock implements _i29.GetOnTheAirTVs {
  MockGetOnTheAirTVs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTVRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TVRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.TV>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>);
}

/// A class which mocks [GetPopularTVs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTVs extends _i1.Mock implements _i30.GetPopularTVs {
  MockGetPopularTVs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTVRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TVRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.TV>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>);
}

/// A class which mocks [GetTopRatedTVs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTVs extends _i1.Mock implements _i31.GetTopRatedTVs {
  MockGetTopRatedTVs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTVRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TVRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.TV>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>);
}

/// A class which mocks [GetWatchlistMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistMovies extends _i1.Mock
    implements _i32.GetWatchlistMovies {
  MockGetWatchlistMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetWatchlistTVs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistTVs extends _i1.Mock implements _i33.GetWatchlistTVs {
  MockGetWatchlistTVs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.TV>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.TV>>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i7.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i7.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<_i7.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<_i7.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i34.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<_i7.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i34.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<_i7.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i34.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<_i7.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i34.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i8.Future<String>.value(
              _i20.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  _i8.Future<_i35.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i8.Future<_i35.Uint8List>.value(_i35.Uint8List(0)),
          )
          as _i8.Future<_i35.Uint8List>);

  @override
  _i8.Future<_i7.StreamedResponse> send(_i7.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i8.Future<_i7.StreamedResponse>.value(
              _FakeStreamedResponse_6(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i8.Future<_i7.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}
